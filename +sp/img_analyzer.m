%--------------------------------------------------------------------------
%  img_analyzer(I,J)
%--------------------------------------------------------------------------
%   功能:
%   计算图像的评价指标(用于测试)
%--------------------------------------------------------------------------
%   输入:
%           I                       参考图像
%           J                       待评价图像
%   输出:
%           mae                     平均绝对误差
%           mse                     图像分辨率
%           nmse                    归一化均方误差
%           snr                     信噪比
%           psnr                    峰值信噪比
%--------------------------------------------------------------------------
%   例子:   
%   A = imread('ngc6543a.jpg');
%   h = gausswin(3).*gausswin(3)';
%   A_out = imfilter(A,h);
%   img_analyzer(A,A_out);
%   [mae,mse,nmse,snr,psnr] = img_analyzer(I,J);
%--------------------------------------------------------------------------
function [mae,mse,nmse,snr,psnr] = img_analyzer(I,J)
if nargout == 0
    subplot(121);imshow(I);title('参考图像')
    subplot(122);imshow(J);title('待评价图像')
end
%--------------------------------------------------------------------------
I = double(I);J = double(J);
M = numel(I(:,:,1));
%--------------------------------------------------------------------------
dif_mae = abs(I-J);
val_mae = sum(dif_mae(:));
mae = val_mae/M;
%--------------------------------------------------------------------------
dif_mse = (I - J).^2;
val_mse = sum(dif_mse(:));
mse = val_mse/M;
%--------------------------------------------------------------------------
dif_nmse = (I - J).^2;
I_2 = I.^2;
val1 = sum(dif_nmse(:));
val2 = sum(I_2(:));
nmse = val1/val2;
%--------------------------------------------------------------------------
dif_snr = (I - J).^2;
val3 = sum(dif_snr(:));
val4 = sum(I_2(:));
snr = pow2db(val4/val3);
psnr = pow2db(255^2*M/val3);
%--------------------------------------------------------------------------
[a,b,c] = size(I);
disp('--------------------------------------------------------------------')
if c == 3
    fprintf(['\t图像分辨率\t\t' num2str(b) 'x' num2str(a) 'x' num2str(c) '\t彩色\n']);
else
    fprintf(['\t图像分辨率\t\t' num2str(b) 'x' num2str(a) 'x' num2str(c) '\t黑白\n']);
end
disp('--------------------------------------------------------------------')
fprintf(['\t平均绝对误差\t\tMAE\t\t= ' num2str(mae) '\n']);
fprintf(['\t均方误差\t\t\tMSE\t\t= ' num2str(mse) '\n']);
fprintf(['\t归一化均方误差\t\tNMSE\t= ' num2str(nmse) '\n']);
fprintf(['\t信噪比\t\t\tSNR\t\t= ' num2str(snr) '\tdB\n']);
fprintf(['\t峰值信噪比\t\tPSNR\t= ' num2str(psnr) '\tdB\t仅适用于8bit图像(0-255)\n'])
disp('--------------------------------------------------------------------')
end


%--------------------------------------------------------------------------
%   保留函数未使用
%--------------------------------------------------------------------------
%   用于计算ISNR信噪比改善因子
%   I为原始图像
%   P为退化的图像
%   J为修复后的图像
%   返回的isnr越大，表明相对于退化图像复原的改善程度越大，算法的图像恢复
%   能力越好。
%   反之如果isnr<0,说明图像相比于退化图像更加远离目标，算法不能使退化图像
%   得到改善。
%--------------------------------------------------------------------------
function calculate_isnr(I,P,J)
N = numel(I(:,:,1));
dif1 = (J - I).^2;
dif2 = (P - I).^2;
val_1 = sum(dif1(:));
val_2 = sum(dif2(:));
isnr = pow2db(val_2/val_1);
end















